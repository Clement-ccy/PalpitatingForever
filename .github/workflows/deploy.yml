name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 设置工作流权限以允许部署到GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行的和最新排队的运行之间的运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env with Github Secrets
      run: |
        echo "NODE_ENV=production" > .env
        echo "NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}" >> .env
        echo "NOTION_BLOGS_DATABASE_ID=${{ secrets.NOTION_BLOGS_DATABASE_ID }}" >> .env
        echo "NOTION_WORKS_DATABASE_ID=${{ secrets.NOTION_WORKS_DATABASE_ID }}" >> .env
        echo "NOTION_PLOGS_DATABASE_ID=${{ secrets.NOTION_PLOGS_DATABASE_ID }}" >> .env
        echo "NOTION_MLOGS_DATABASE_ID=${{ secrets.NOTION_MLOGS_DATABASE_ID }}" >> .env

    - name: Debug .env file
      run: |
        echo "Contents of .env file:"
        cat .env
        echo "Environment variables available to Node.js:"
        node -e "console.log('NOTION_API_KEY:', process.env.NOTION_API_KEY ? 'SET' : 'NOT SET')"

    - name: Build project
      run: npm run build

    - name: Debug build output
      run: |
        echo "Contents of dist directory:"
        ls -la dist/
        echo "Contents of dist/index.html:"
        head -20 dist/index.html
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 部署作业
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4